/*
 * Copyright(c) OnePoint Software GmbH 2007. All Rights Reserved.
 */

// Controller script for edit_user.oxf.xml

require "onepoint/project/scripts/error.jes";
require "onepoint/project/modules/user/scripts/open_subject_chooser.jes";

import onepoint.service.XMessage;
import onepoint.express.XDisplay;
import onepoint.express.XComponent;
import onepoint.express.XExtendedComponent;
import onepoint.express.XValidator;
import onepoint.project.util.OpHashProvider;

function ok(event) {
   form = XDisplay.getActiveForm();
   edit_mode = form.findComponent("EditMode").getBooleanValue();
   if (edit_mode) {
      ok_edit(event);
   }
   else {
      cancel(event);
   }
}

function ok_edit(event) {
   // Gather user-data
   form = XDisplay.getActiveForm();

   password = form.findComponent("Password").getStringValue();
   password_retyped = form.findComponent("PasswordRetyped").getStringValue();
   
   user_id = form.findComponent("UserID").getStringValue();
   user_data.FirstName = form.findComponent("FirstName").getStringValue();
   user_data.LastName = form.findComponent("LastName").getStringValue();
   user_data.Name = form.findComponent("Name").getStringValue();
   user_data.Description = form.findComponent("Description").getStringValue();
   if (password != null) {
      user_data.Password = OpHashProvider.calculateHash(password, "SHA-1");
   }
   if (password_retyped != null) {
      user_data.PasswordRetyped = OpHashProvider.calculateHash(password_retyped, "SHA-1");
   }
   userLevel = form.findComponent("UserLevel").getStringValue();
   userLevel = XValidator.choiceID(userLevel);
   user_data.userLevel = userLevel;
   user_data.EMail = form.findComponent("EMail").getStringValue();
   user_data.Phone = form.findComponent("Phone").getStringValue();
   user_data.Mobile = form.findComponent("Mobile").getStringValue();
   user_data.Fax = form.findComponent("Fax").getStringValue();
   user_data.Language = XValidator.choiceID(form.findComponent("UserLanguage").getStringValue());

   assigned_group_data_set = form.findComponent("AssignedGroupDataSet");
   i = 0;
   while (i < assigned_group_data_set.getChildCount()) {
      assigned_groups[i] = assigned_group_data_set.getChild(i).getStringValue();
      i++;
   }
   user_data.assigned_groups = assigned_groups;

   // Call service-method User.insertUser
   request = new XMessage;
   // *** Maybe better: client.newMessage("UserService.updateUser");
   request.setAction("UserService.updateUser");
   request.setArgument("user_id", user_id);
   request.setArgument("user_data", user_data);
   response = XDisplay.getClient().invokeMethod(request);

   if (handleError(form, response, "ErrorLabel") == true) {
      XDisplay.getActiveWindow().close();

      refresh = response.getArgument("refresh");
      if (refresh == true) {
         XDisplay.clearResourceCache();
         request = new XMessage;
         request.setAction("Express.clearResourceCache");
         XDisplay.getClient().invokeMethod(request);
         mainFrame = XDisplay.findFrame("MainFrame");
         dockFrame = XDisplay.findFrame("DockFrame");
         headerFrame = XDisplay.findFrame("HeaderFrame");
         frames[0] = mainFrame;
         frames[1] = dockFrame;
         frames[2] = headerFrame;
         XDisplay.refreshForms(frames);
      }
      else {
         XDisplay.findFrame("MainFrame").refreshForm();
      }
   }
}


function cancel(event) {
   // window.close();
   XDisplay.getActiveWindow().close();
}

function addGroup(event) {
   form = XDisplay.getActiveForm();
   assignedGroupsDataSet = form.findComponent("AssignedGroupDataSet");
   filteredIds = new ArrayList;
   i = 0;
   while (i < assignedGroupsDataSet.getChildCount()) {
      choiceId = XValidator.choiceID(assignedGroupsDataSet.getChild(i).getStringValue());
      filteredIds[i] = choiceId;
      i++;
   }
   openSubjectChooser("MainFrame", "assignToGroups_NewEdit", false, true, filteredIds, true, false);   
}

function removeGroup(event) {
   form = XDisplay.getActiveForm();
   assigned_group_data_set = form.findComponent("AssignedGroupDataSet");
   selected_rows = assigned_group_data_set.selectedRows();
   assigned_group_data_set.removeDataRows(selected_rows);
   // Update assigned user list
   assigned_group_list_box = form.findComponent("AssignedGroupListBox");
   assigned_group_list_box.update();
}

