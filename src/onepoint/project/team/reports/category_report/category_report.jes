/*
 * Copyright(c) OnePoint Software GmbH 2006. All Rights Reserved.
 */

// Reporting script for project_progress.oxf.xml
import onepoint.express.XDisplay;
import onepoint.express.XValidator;
import onepoint.service.XMessage;

function runQuery() {

   Console.println("CategoryReport.runQuery()");

   form = XDisplay.findFrame("QueryFrame").currentForm();

   parameters.RunQuery = true;
   parameters.Start = form.findComponent("StartField").getDateValue();
   parameters.Finish = form.findComponent("FinishField").getDateValue();
   if (parameters.Start != null && parameters.Finish != null) {
      XDisplay.findFrame("QueryFrame").refreshForm(parameters);
   }
}

function createRequest() {
   Console.println("CategoryReport.createRequest()");
   
   form = XDisplay.findFrame("QueryFrame").currentForm();
   error_label = form.findComponent("ErrorLabel");
   //important: as we can only have one "mainfile" in a jar, we refer here to the jar!!!
   name = "categoryreport.jar";

   /*check for valid start date */
   start_date = form.findComponent("StartField").getDateValue();
   if (start_date == null) {
      error_message = form.findComponent("InvalidStartField").getText();
      error_label.setText(error_message);
      error_label.setVisible(true);
      form.doLayout();
      form.repaint();
      return null;
   }
   /*check for valid finish date */
   finish_date = form.findComponent("FinishField").getDateValue();
   if (finish_date == null){
      error_message = form.findComponent("InvalidFinishField").getText();
      error_label.setText(error_message);
      error_label.setVisible(true);
      form.doLayout();
      form.repaint();
      return null;
   }

   parameters.fromDate = start_date;
   parameters.toDate = finish_date;
   formats[0] = "PDF";

   request = new XMessage;
   request.setArgument("name", name);
   request.setArgument("parameters", parameters);
   request.setArgument("formats", formats);

   return request;
}

function prepareForm(event){
   button = XDisplay.findFrame("QueryFrame").getForm().findComponent("PrintButton");
   button.setEnabled(true);
   button.update();
   button = XDisplay.findFrame("QueryFrame").getForm().findComponent("RunQueryButton");
   button.setEnabled(true);
   button.update();
   button = XDisplay.findFrame("QueryFrame").getForm().findComponent("ResetQueryButton");
   button.setEnabled(true);
   button.update();
}

function saveTableCSV(event){
   XDisplay.getActiveForm().findComponent("ResultTable").saveAsCSV("Save Category Report");
}

function saveTableImage(event) {
   XDisplay.getActiveForm().findComponent("ResultTable").saveAsImage("Save Category Report");
}

/**
 * Returns a HQL query that will be used to fill up the report.
 */
function getReportQuery() {
   selectClause = "select category.Name, sum(activity.ActualEffort), sum(activity.ActualPersonnelCosts), sum(activity.ActualTravelCosts), sum(activity.ActualMaterialCosts), sum(activity.ActualExternalCosts), sum(activity.ActualMiscellaneousCosts), category.Description";
   fromClause = " from OpActivityCategory category inner join category.Activities activity ";
   whereClause = " where activity.Start >= ? and activity.Finish <= ? and activity.Deleted = false and activity.Template = false and category.Active = true group by category.Name, category.Description order by category.Name";

   queryString = selectClause + fromClause + whereClause;
   Console.println("Category report query:" + queryString);

   query.queryString = queryString;
   form = XDisplay.findFrame("QueryFrame").currentForm();
   fromDate = form.findComponent("StartField").getDateValue();
   toDate = form.findComponent("FinishField").getDateValue();
   query.queryParams[0] = fromDate;
   query.queryParams[1] = toDate;

   return query;
}

/**
 * Returns a map of [reportFieldName, reportFieldIndex] pairs that indicated how the fields from the report map to the
 * result of the query.
 */
function getReportFields() {
   result.cat_name = 0;
   result.sum_actualeffort = 1;
   result.sum_personnel = 2;
   result.sum_travel = 3;
   result.sum_material = 4;
   result.sum_external = 5;
   result.sum_misc = 6;
   result.cat_description = 7;

   return result;
}

function getResourceMapId() {
   return null;
}