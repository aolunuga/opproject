/*
 * Copyright(c) Onepoint Software GmbH 2008. All Rights Reserved.
 */

package onepoint.project.test;

import java.sql.SQLException;
import java.util.Properties;

import onepoint.log.XLog;
import onepoint.log.XLogFactory;
import onepoint.project.OpInitializer;
import onepoint.project.OpInitializerFactory;
import onepoint.project.OpProjectSession;
import onepoint.project.modules.backup.OpBackupManager;
import onepoint.project.util.OpProjectConstants;

/**
 * Test initializer for the open opproject module.
 *
 * @author mihai.costin
 */
public class OpOpenTestInitializer extends OpTestInitializer {

   private static final XLog logger = XLogFactory.getLogger(OpOpenTestInitializer.class);

   public void initialize(Properties testProperties) {
      try {
         super.initialize(testProperties);

         // initialize factory
         OpInitializerFactory factory = OpInitializerFactory.getInstance();
         OpInitializer initializer = factory.getInitializer();
         if (initializer == null) {
            initializer = factory.setInitializer(OpInitializer.class);
            initializer.init(OpProjectConstants.OPEN_EDITION_CODE);
         }


         // remove all objects
         OpProjectSession session = new OpProjectSession();
         OpBackupManager.getBackupManager().removeAllObjects(session);
         session.close();

         //make sure we have a clean schema
         initializer.resetDbSchema();
         logger.debug("Application initialization end.");
      }
      catch (SQLException e) {
         logger.error("Cannot initialize tests because:" + e.getMessage(), e);
         System.exit(0);
      }
   }

}
