//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v1.0.6-01/24/2006 06:08 PM(kohsuke)-fcs 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2007.11.08 at 02:58:36 PM CET 
//


package onepoint.project.configuration.generated.impl;

public class OpLdapConnectionConfigImpl implements onepoint.project.configuration.generated.OpLdapConnectionConfig, com.sun.xml.bind.JAXBObject, onepoint.project.configuration.generated.impl.runtime.UnmarshallableObject, onepoint.project.configuration.generated.impl.runtime.XMLSerializable, onepoint.project.configuration.generated.impl.runtime.ValidatableObject
{

    protected java.lang.String _ConnectUrl;
    protected java.lang.String _PasswordHashAlgorithm;
    protected java.lang.String _SecurityProtocol;
    protected java.lang.String _DnsUrl;
    protected java.lang.String _Keystore;
    protected java.lang.String _SecurityPrincipal;
    protected java.lang.String _SecurityAuthentication;
    protected java.lang.String _SecurityCredentials;
    public final static java.lang.Class version = (onepoint.project.configuration.generated.impl.JAXBVersion.class);
    private static com.sun.msv.grammar.Grammar schemaFragment;

    private final static java.lang.Class PRIMARY_INTERFACE_CLASS() {
        return (onepoint.project.configuration.generated.OpLdapConnectionConfig.class);
    }

    public java.lang.String getConnectUrl() {
        return _ConnectUrl;
    }

    public void setConnectUrl(java.lang.String value) {
        _ConnectUrl = value;
    }

    public java.lang.String getPasswordHashAlgorithm() {
        return _PasswordHashAlgorithm;
    }

    public void setPasswordHashAlgorithm(java.lang.String value) {
        _PasswordHashAlgorithm = value;
    }

    public java.lang.String getSecurityProtocol() {
        return _SecurityProtocol;
    }

    public void setSecurityProtocol(java.lang.String value) {
        _SecurityProtocol = value;
    }

    public java.lang.String getDnsUrl() {
        return _DnsUrl;
    }

    public void setDnsUrl(java.lang.String value) {
        _DnsUrl = value;
    }

    public java.lang.String getKeystore() {
        return _Keystore;
    }

    public void setKeystore(java.lang.String value) {
        _Keystore = value;
    }

    public java.lang.String getSecurityPrincipal() {
        return _SecurityPrincipal;
    }

    public void setSecurityPrincipal(java.lang.String value) {
        _SecurityPrincipal = value;
    }

    public java.lang.String getSecurityAuthentication() {
        return _SecurityAuthentication;
    }

    public void setSecurityAuthentication(java.lang.String value) {
        _SecurityAuthentication = value;
    }

    public java.lang.String getSecurityCredentials() {
        return _SecurityCredentials;
    }

    public void setSecurityCredentials(java.lang.String value) {
        _SecurityCredentials = value;
    }

    public onepoint.project.configuration.generated.impl.runtime.UnmarshallingEventHandler createUnmarshaller(onepoint.project.configuration.generated.impl.runtime.UnmarshallingContext context) {
        return new onepoint.project.configuration.generated.impl.OpLdapConnectionConfigImpl.Unmarshaller(context);
    }

    public void serializeBody(onepoint.project.configuration.generated.impl.runtime.XMLSerializer context)
        throws org.xml.sax.SAXException
    {
        context.startElement("", "connect-url");
        context.endNamespaceDecls();
        context.endAttributes();
        try {
            context.text(((java.lang.String) _ConnectUrl), "ConnectUrl");
        } catch (java.lang.Exception e) {
            onepoint.project.configuration.generated.impl.runtime.Util.handlePrintConversionException(this, e, context);
        }
        context.endElement();
        if (_Keystore!= null) {
            context.startElement("", "keystore");
            context.endNamespaceDecls();
            context.endAttributes();
            try {
                context.text(((java.lang.String) _Keystore), "Keystore");
            } catch (java.lang.Exception e) {
                onepoint.project.configuration.generated.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endElement();
        }
        if (_DnsUrl!= null) {
            context.startElement("", "dns-url");
            context.endNamespaceDecls();
            context.endAttributes();
            try {
                context.text(((java.lang.String) _DnsUrl), "DnsUrl");
            } catch (java.lang.Exception e) {
                onepoint.project.configuration.generated.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endElement();
        }
        if (_SecurityAuthentication!= null) {
            context.startElement("", "security-authentication");
            context.endNamespaceDecls();
            context.endAttributes();
            try {
                context.text(((java.lang.String) _SecurityAuthentication), "SecurityAuthentication");
            } catch (java.lang.Exception e) {
                onepoint.project.configuration.generated.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endElement();
        }
        context.startElement("", "security-principal");
        context.endNamespaceDecls();
        context.endAttributes();
        try {
            context.text(((java.lang.String) _SecurityPrincipal), "SecurityPrincipal");
        } catch (java.lang.Exception e) {
            onepoint.project.configuration.generated.impl.runtime.Util.handlePrintConversionException(this, e, context);
        }
        context.endElement();
        context.startElement("", "security-credentials");
        context.endNamespaceDecls();
        context.endAttributes();
        try {
            context.text(((java.lang.String) _SecurityCredentials), "SecurityCredentials");
        } catch (java.lang.Exception e) {
            onepoint.project.configuration.generated.impl.runtime.Util.handlePrintConversionException(this, e, context);
        }
        context.endElement();
        if (_SecurityProtocol!= null) {
            context.startElement("", "security-protocol");
            context.endNamespaceDecls();
            context.endAttributes();
            try {
                context.text(((java.lang.String) _SecurityProtocol), "SecurityProtocol");
            } catch (java.lang.Exception e) {
                onepoint.project.configuration.generated.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endElement();
        }
        if (_PasswordHashAlgorithm!= null) {
            context.startElement("", "password-hash-algorithm");
            context.endNamespaceDecls();
            context.endAttributes();
            try {
                context.text(((java.lang.String) _PasswordHashAlgorithm), "PasswordHashAlgorithm");
            } catch (java.lang.Exception e) {
                onepoint.project.configuration.generated.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endElement();
        }
    }

    public void serializeAttributes(onepoint.project.configuration.generated.impl.runtime.XMLSerializer context)
        throws org.xml.sax.SAXException
    {
    }

    public void serializeURIs(onepoint.project.configuration.generated.impl.runtime.XMLSerializer context)
        throws org.xml.sax.SAXException
    {
    }

    public java.lang.Class getPrimaryInterface() {
        return (onepoint.project.configuration.generated.OpLdapConnectionConfig.class);
    }

    public com.sun.msv.verifier.DocumentDeclaration createRawValidator() {
        if (schemaFragment == null) {
            schemaFragment = com.sun.xml.bind.validator.SchemaDeserializer.deserialize((
 "\u00ac\u00ed\u0000\u0005sr\u0000\u001fcom.sun.msv.grammar.SequenceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001dcom.su"
+"n.msv.grammar.BinaryExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0004exp1t\u0000 Lcom/sun/msv/gra"
+"mmar/Expression;L\u0000\u0004exp2q\u0000~\u0000\u0002xr\u0000\u001ecom.sun.msv.grammar.Expressi"
+"on\u00f8\u0018\u0082\u00e8N5~O\u0002\u0000\u0002L\u0000\u0013epsilonReducibilityt\u0000\u0013Ljava/lang/Boolean;L\u0000\u000b"
+"expandedExpq\u0000~\u0000\u0002xpppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000pp"
+"sq\u0000~\u0000\u0000ppsr\u0000\'com.sun.msv.grammar.trex.ElementPattern\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002"
+"\u0000\u0001L\u0000\tnameClasst\u0000\u001fLcom/sun/msv/grammar/NameClass;xr\u0000\u001ecom.sun."
+"msv.grammar.ElementExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002Z\u0000\u001aignoreUndeclaredAttribut"
+"esL\u0000\fcontentModelq\u0000~\u0000\u0002xq\u0000~\u0000\u0003pp\u0000sq\u0000~\u0000\u0000ppsr\u0000\u001bcom.sun.msv.gramm"
+"ar.DataExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\u0002dtt\u0000\u001fLorg/relaxng/datatype/Datatype;"
+"L\u0000\u0006exceptq\u0000~\u0000\u0002L\u0000\u0004namet\u0000\u001dLcom/sun/msv/util/StringPair;xq\u0000~\u0000\u0003p"
+"psr\u0000#com.sun.msv.datatype.xsd.AnyURIType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000*com.s"
+"un.msv.datatype.xsd.BuiltinAtomicType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000%com.sun."
+"msv.datatype.xsd.ConcreteType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\'com.sun.msv.data"
+"type.xsd.XSDatatypeImpl\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\fnamespaceUrit\u0000\u0012Ljava/la"
+"ng/String;L\u0000\btypeNameq\u0000~\u0000\u0019L\u0000\nwhiteSpacet\u0000.Lcom/sun/msv/datat"
+"ype/xsd/WhiteSpaceProcessor;xpt\u0000 http://www.w3.org/2001/XMLS"
+"chemat\u0000\u0006anyURIsr\u00005com.sun.msv.datatype.xsd.WhiteSpaceProcess"
+"or$Collapse\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000,com.sun.msv.datatype.xsd.WhiteSpac"
+"eProcessor\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xpsr\u00000com.sun.msv.grammar.Expression$Nu"
+"llSetExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003ppsr\u0000\u001bcom.sun.msv.util.Strin"
+"gPair\u00d0t\u001ejB\u008f\u008d\u00a0\u0002\u0000\u0002L\u0000\tlocalNameq\u0000~\u0000\u0019L\u0000\fnamespaceURIq\u0000~\u0000\u0019xpq\u0000~\u0000\u001d"
+"q\u0000~\u0000\u001csr\u0000\u001dcom.sun.msv.grammar.ChoiceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0001ppsr\u0000"
+" com.sun.msv.grammar.AttributeExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0003expq\u0000~\u0000\u0002L\u0000\tna"
+"meClassq\u0000~\u0000\rxq\u0000~\u0000\u0003sr\u0000\u0011java.lang.Boolean\u00cd r\u0080\u00d5\u009c\u00fa\u00ee\u0002\u0000\u0001Z\u0000\u0005valuexp"
+"\u0000psq\u0000~\u0000\u0011ppsr\u0000\"com.sun.msv.datatype.xsd.QnameType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000x"
+"q\u0000~\u0000\u0016q\u0000~\u0000\u001ct\u0000\u0005QNameq\u0000~\u0000 q\u0000~\u0000\"sq\u0000~\u0000#q\u0000~\u0000.q\u0000~\u0000\u001csr\u0000#com.sun.msv."
+"grammar.SimpleNameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\tlocalNameq\u0000~\u0000\u0019L\u0000\fnamesp"
+"aceURIq\u0000~\u0000\u0019xr\u0000\u001dcom.sun.msv.grammar.NameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xpt\u0000\u0004"
+"typet\u0000)http://www.w3.org/2001/XMLSchema-instancesr\u00000com.sun."
+"msv.grammar.Expression$EpsilonExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003sq\u0000"
+"~\u0000)\u0001q\u0000~\u00006sq\u0000~\u00000t\u0000\u000bconnect-urlt\u0000\u0000sq\u0000~\u0000%ppsq\u0000~\u0000\fq\u0000~\u0000*p\u0000sq\u0000~\u0000\u0000p"
+"psq\u0000~\u0000\u0011ppsr\u0000#com.sun.msv.datatype.xsd.StringType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001Z"
+"\u0000\risAlwaysValidxq\u0000~\u0000\u0016q\u0000~\u0000\u001ct\u0000\u0006stringsr\u00005com.sun.msv.datatype."
+"xsd.WhiteSpaceProcessor$Preserve\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u001f\u0001q\u0000~\u0000\"sq\u0000~\u0000"
+"#q\u0000~\u0000Aq\u0000~\u0000\u001csq\u0000~\u0000%ppsq\u0000~\u0000\'q\u0000~\u0000*pq\u0000~\u0000+q\u0000~\u00002q\u0000~\u00006sq\u0000~\u00000t\u0000\bkeyst"
+"oreq\u0000~\u0000:q\u0000~\u00006sq\u0000~\u0000%ppsq\u0000~\u0000\fq\u0000~\u0000*p\u0000sq\u0000~\u0000\u0000ppq\u0000~\u0000\u0014sq\u0000~\u0000%ppsq\u0000~\u0000"
+"\'q\u0000~\u0000*pq\u0000~\u0000+q\u0000~\u00002q\u0000~\u00006sq\u0000~\u00000t\u0000\u0007dns-urlq\u0000~\u0000:q\u0000~\u00006sq\u0000~\u0000%ppsq\u0000~"
+"\u0000\fq\u0000~\u0000*p\u0000sq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0011ppsr\u0000)com.sun.msv.datatype.xsd.Enumer"
+"ationFacet\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\u0006valuest\u0000\u000fLjava/util/Set;xr\u00009com.sun."
+"msv.datatype.xsd.DataTypeWithValueConstraintFacet\"\u00a7Ro\u00ca\u00c7\u008aT\u0002\u0000\u0000"
+"xr\u0000*com.sun.msv.datatype.xsd.DataTypeWithFacet\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0005Z\u0000\f"
+"isFacetFixedZ\u0000\u0012needValueCheckFlagL\u0000\bbaseTypet\u0000)Lcom/sun/msv/"
+"datatype/xsd/XSDatatypeImpl;L\u0000\fconcreteTypet\u0000\'Lcom/sun/msv/d"
+"atatype/xsd/ConcreteType;L\u0000\tfacetNameq\u0000~\u0000\u0019xq\u0000~\u0000\u0018q\u0000~\u0000:pq\u0000~\u0000C\u0000"
+"\u0000q\u0000~\u0000@q\u0000~\u0000@t\u0000\u000benumerationsr\u0000\u0011java.util.HashSet\u00baD\u0085\u0095\u0096\u00b8\u00b74\u0003\u0000\u0000xpw"
+"\f\u0000\u0000\u0000\u0010?@\u0000\u0000\u0000\u0000\u0000\u0003t\u0000\u0006strongt\u0000\u0004nonet\u0000\u0006simplexq\u0000~\u0000\"sq\u0000~\u0000#t\u0000\u000estring-"
+"derivedq\u0000~\u0000:sq\u0000~\u0000%ppsq\u0000~\u0000\'q\u0000~\u0000*pq\u0000~\u0000+q\u0000~\u00002q\u0000~\u00006sq\u0000~\u00000t\u0000\u0017secu"
+"rity-authenticationq\u0000~\u0000:q\u0000~\u00006sq\u0000~\u0000\fpp\u0000sq\u0000~\u0000\u0000ppq\u0000~\u0000>sq\u0000~\u0000%pps"
+"q\u0000~\u0000\'q\u0000~\u0000*pq\u0000~\u0000+q\u0000~\u00002q\u0000~\u00006sq\u0000~\u00000t\u0000\u0012security-principalq\u0000~\u0000:sq"
+"\u0000~\u0000\fpp\u0000sq\u0000~\u0000\u0000ppq\u0000~\u0000>sq\u0000~\u0000%ppsq\u0000~\u0000\'q\u0000~\u0000*pq\u0000~\u0000+q\u0000~\u00002q\u0000~\u00006sq\u0000~\u0000"
+"0t\u0000\u0014security-credentialsq\u0000~\u0000:sq\u0000~\u0000%ppsq\u0000~\u0000\fq\u0000~\u0000*p\u0000sq\u0000~\u0000\u0000ppq\u0000"
+"~\u0000>sq\u0000~\u0000%ppsq\u0000~\u0000\'q\u0000~\u0000*pq\u0000~\u0000+q\u0000~\u00002q\u0000~\u00006sq\u0000~\u00000t\u0000\u0011security-prot"
+"ocolq\u0000~\u0000:q\u0000~\u00006sq\u0000~\u0000%ppsq\u0000~\u0000\fq\u0000~\u0000*p\u0000sq\u0000~\u0000\u0000ppq\u0000~\u0000>sq\u0000~\u0000%ppsq\u0000~"
+"\u0000\'q\u0000~\u0000*pq\u0000~\u0000+q\u0000~\u00002q\u0000~\u00006sq\u0000~\u00000t\u0000\u0017password-hash-algorithmq\u0000~\u0000:"
+"q\u0000~\u00006sr\u0000\"com.sun.msv.grammar.ExpressionPool\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\bexp"
+"Tablet\u0000/Lcom/sun/msv/grammar/ExpressionPool$ClosedHash;xpsr\u0000"
+"-com.sun.msv.grammar.ExpressionPool$ClosedHash\u00d7j\u00d0N\u00ef\u00e8\u00ed\u001c\u0003\u0000\u0003I\u0000\u0005"
+"countB\u0000\rstreamVersionL\u0000\u0006parentt\u0000$Lcom/sun/msv/grammar/Expres"
+"sionPool;xp\u0000\u0000\u0000\u001c\u0001pq\u0000~\u0000\tq\u0000~\u0000Iq\u0000~\u0000=q\u0000~\u0000hq\u0000~\u0000nq\u0000~\u0000uq\u0000~\u0000&q\u0000~\u0000Eq\u0000~"
+"\u0000Lq\u0000~\u0000\u000bq\u0000~\u0000cq\u0000~\u0000iq\u0000~\u0000oq\u0000~\u0000vq\u0000~\u0000\nq\u0000~\u0000}q\u0000~\u0000|q\u0000~\u0000;q\u0000~\u0000sq\u0000~\u0000zq\u0000~"
+"\u0000\u0006q\u0000~\u0000\u0007q\u0000~\u0000Rq\u0000~\u0000\u0010q\u0000~\u0000Kq\u0000~\u0000Pq\u0000~\u0000\bq\u0000~\u0000\u0005x"));
        }
        return new com.sun.msv.verifier.regexp.REDocumentDeclaration(schemaFragment);
    }

    public class Unmarshaller
        extends onepoint.project.configuration.generated.impl.runtime.AbstractUnmarshallingEventHandlerImpl
    {


        public Unmarshaller(onepoint.project.configuration.generated.impl.runtime.UnmarshallingContext context) {
            super(context, "-------------------------");
        }

        protected Unmarshaller(onepoint.project.configuration.generated.impl.runtime.UnmarshallingContext context, int startState) {
            this(context);
            state = startState;
        }

        public java.lang.Object owner() {
            return onepoint.project.configuration.generated.impl.OpLdapConnectionConfigImpl.this;
        }

        public void enterElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname, org.xml.sax.Attributes __atts)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  0 :
                        if (("connect-url" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 1;
                            return ;
                        }
                        break;
                    case  18 :
                        if (("security-protocol" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 19;
                            return ;
                        }
                        state = 21;
                        continue outer;
                    case  6 :
                        if (("dns-url" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 7;
                            return ;
                        }
                        state = 9;
                        continue outer;
                    case  9 :
                        if (("security-authentication" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 10;
                            return ;
                        }
                        state = 12;
                        continue outer;
                    case  15 :
                        if (("security-credentials" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 16;
                            return ;
                        }
                        break;
                    case  3 :
                        if (("keystore" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 4;
                            return ;
                        }
                        state = 6;
                        continue outer;
                    case  21 :
                        if (("password-hash-algorithm" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 22;
                            return ;
                        }
                        state = 24;
                        continue outer;
                    case  12 :
                        if (("security-principal" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 13;
                            return ;
                        }
                        break;
                    case  24 :
                        revertToParentFromEnterElement(___uri, ___local, ___qname, __atts);
                        return ;
                }
                super.enterElement(___uri, ___local, ___qname, __atts);
                break;
            }
        }

        public void leaveElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  18 :
                        state = 21;
                        continue outer;
                    case  6 :
                        state = 9;
                        continue outer;
                    case  2 :
                        if (("connect-url" == ___local)&&("" == ___uri)) {
                            context.popAttributes();
                            state = 3;
                            return ;
                        }
                        break;
                    case  14 :
                        if (("security-principal" == ___local)&&("" == ___uri)) {
                            context.popAttributes();
                            state = 15;
                            return ;
                        }
                        break;
                    case  9 :
                        state = 12;
                        continue outer;
                    case  5 :
                        if (("keystore" == ___local)&&("" == ___uri)) {
                            context.popAttributes();
                            state = 6;
                            return ;
                        }
                        break;
                    case  17 :
                        if (("security-credentials" == ___local)&&("" == ___uri)) {
                            context.popAttributes();
                            state = 18;
                            return ;
                        }
                        break;
                    case  11 :
                        if (("security-authentication" == ___local)&&("" == ___uri)) {
                            context.popAttributes();
                            state = 12;
                            return ;
                        }
                        break;
                    case  3 :
                        state = 6;
                        continue outer;
                    case  23 :
                        if (("password-hash-algorithm" == ___local)&&("" == ___uri)) {
                            context.popAttributes();
                            state = 24;
                            return ;
                        }
                        break;
                    case  8 :
                        if (("dns-url" == ___local)&&("" == ___uri)) {
                            context.popAttributes();
                            state = 9;
                            return ;
                        }
                        break;
                    case  21 :
                        state = 24;
                        continue outer;
                    case  20 :
                        if (("security-protocol" == ___local)&&("" == ___uri)) {
                            context.popAttributes();
                            state = 21;
                            return ;
                        }
                        break;
                    case  24 :
                        revertToParentFromLeaveElement(___uri, ___local, ___qname);
                        return ;
                }
                super.leaveElement(___uri, ___local, ___qname);
                break;
            }
        }

        public void enterAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  18 :
                        state = 21;
                        continue outer;
                    case  6 :
                        state = 9;
                        continue outer;
                    case  9 :
                        state = 12;
                        continue outer;
                    case  3 :
                        state = 6;
                        continue outer;
                    case  21 :
                        state = 24;
                        continue outer;
                    case  24 :
                        revertToParentFromEnterAttribute(___uri, ___local, ___qname);
                        return ;
                }
                super.enterAttribute(___uri, ___local, ___qname);
                break;
            }
        }

        public void leaveAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  18 :
                        state = 21;
                        continue outer;
                    case  6 :
                        state = 9;
                        continue outer;
                    case  9 :
                        state = 12;
                        continue outer;
                    case  3 :
                        state = 6;
                        continue outer;
                    case  21 :
                        state = 24;
                        continue outer;
                    case  24 :
                        revertToParentFromLeaveAttribute(___uri, ___local, ___qname);
                        return ;
                }
                super.leaveAttribute(___uri, ___local, ___qname);
                break;
            }
        }

        public void handleText(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                try {
                    switch (state) {
                        case  13 :
                            state = 14;
                            eatText1(value);
                            return ;
                        case  18 :
                            state = 21;
                            continue outer;
                        case  6 :
                            state = 9;
                            continue outer;
                        case  22 :
                            state = 23;
                            eatText2(value);
                            return ;
                        case  16 :
                            state = 17;
                            eatText3(value);
                            return ;
                        case  9 :
                            state = 12;
                            continue outer;
                        case  1 :
                            state = 2;
                            eatText4(value);
                            return ;
                        case  10 :
                            state = 11;
                            eatText5(value);
                            return ;
                        case  3 :
                            state = 6;
                            continue outer;
                        case  4 :
                            state = 5;
                            eatText6(value);
                            return ;
                        case  19 :
                            state = 20;
                            eatText7(value);
                            return ;
                        case  21 :
                            state = 24;
                            continue outer;
                        case  7 :
                            state = 8;
                            eatText8(value);
                            return ;
                        case  24 :
                            revertToParentFromText(value);
                            return ;
                    }
                } catch (java.lang.RuntimeException e) {
                    handleUnexpectedTextException(value, e);
                }
                break;
            }
        }

        private void eatText1(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _SecurityPrincipal = value;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText2(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _PasswordHashAlgorithm = value;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText3(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _SecurityCredentials = value;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText4(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _ConnectUrl = com.sun.xml.bind.WhiteSpaceProcessor.collapse(value);
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText5(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _SecurityAuthentication = value;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText6(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _Keystore = value;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText7(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _SecurityProtocol = value;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText8(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _DnsUrl = com.sun.xml.bind.WhiteSpaceProcessor.collapse(value);
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

    }

}
