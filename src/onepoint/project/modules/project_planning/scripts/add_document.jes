/*
 * Copyright(c) OnePoint Software GmbH 2007. All Rights Reserved.
 */

// Controller script for add_document.oxf.xml

import onepoint.express.XDisplay;
import onepoint.express.XComponent;
import onepoint.service.XMessage;
import onepoint.express.XValidator;

function ok(event) {
   addOrUpdate(true);
}

/**
 * Inserts or updates an attachment data row in the attachment data set
 *
 * @param add boolean value indicating if the data row will be added (true) or edited (false)
 */
function addOrUpdate(add) {
   dialog = XDisplay.getActiveWindow();
   previous_dialog = XDisplay.getDefaultDisplay().previousLayer(dialog);
   attachment_data_set = previous_dialog.getChild(1).findComponent("AttachmentSet");
   form = XDisplay.getActiveForm();

   name = form.findComponent("Name").getStringValue();
   //force name for an untitled document
   if (name == null) {
      name = "document";
   }
   location = form.findComponent("Location").getStringValue();
   maxAttachmentSizeBytes = form.findComponent("MaxAttachmentSize").getLongValue();

   attachment_table_box = previous_dialog.getChild(1).findComponent("AttachmentList");

   selected_rows = attachment_data_set.selectedRows();
   if (selected_rows.size() > 0) {
      selectedRow = selected_rows[0];
   }
   if (!add) {
      // this component should always exist and should always have a boolean value set on it
      fileSelectedComponent = form.findComponent("FileSelected");
      if (!fileSelectedComponent.getBooleanValue()) {
         // if the attachment's path wasn't updated do not create another attachment row, but use this one with the
         // updated name
         nameCell = selectedRow.getChild(1);
         attachmentId = XValidator.choiceID(nameCell.getStringValue());
         attachmentIconIndex = XValidator.choiceIconIndex(nameCell.getStringValue());
         nameCell.setStringValue(XValidator.choice(attachmentId, name, attachmentIconIndex));
         attachment_table_box.update();
         dialog.close();
         return;
      }
   }

   //full document path
   data_row = attachment_data_set.newDataRow();
   document_path = form.findComponent("DocumentPathField").getStringValue();
   if (document_path != null) {
      data_row.setStringValue(document_path);

      //0 - type
      data_cell = XComponent.newDataCell();
      data_cell.setStringValue("d");
      data_cell.setEnabled(false);
      data_row.addChild(data_cell);

      //1 - choice [name, id]
      data_cell = XComponent.newDataCell();
      data_cell.setStringValue(XValidator.choice("0", name, 1));
      data_cell.setEnabled(false);
      data_row.addChild(data_cell);

      //2 - location
      data_cell = XComponent.newDataCell();
      data_cell.setStringValue(location);
      data_cell.setEnabled(false);
      data_row.addChild(data_cell);

      //3 - content id (the File object in new documents)
      file = File.create(document_path);
      if (file.length() > maxAttachmentSizeBytes) {
         error_label = form.findComponent("ErrorLabel");
         error_label.setText(form.findComponent("InvalidAttachmentSize").getText());
         error_label.setVisible(true);
         form.doLayout();
         form.repaint();
         return;
      }
      data_cell = XComponent.newDataCell();
      data_cell.setValue(file);
      data_cell.setEnabled(false);
      data_row.addChild(data_cell);

      index = -1;
      // if this is an edit operation
      if (!add) {
         // delete the selected data row
         selectedRowsList = new ArrayList;
         if (selected_rows.size() > 0) {
            index = selectedRow.getIndex();
            selectedRowsList.add(selectedRow);
            attachment_data_set.removeDataRows(selectedRowsList);
            attachment_table_box.update();
         }
      }

      // add the edited data row
      if (index > -1) {
         attachment_data_set.addDataRow(index, data_row);
      }
      else {
         attachment_data_set.addDataRow(data_row);
      }
      attachment_table_box.update();
      dialog.close();
   }
   else {
      error_label = form.findComponent("ErrorLabel");
      error_label.setVisible(true);
      form.doLayout();
      form.repaint();
   }
}

function cancel(event) {
   XDisplay.getActiveWindow().close();
}

function select(event) {   
   form = XDisplay.getActiveForm();
   title = form.findComponent("DialogTitle").getText();
   document_path = XDisplay.showFileDialog(title, true, null, null, true);
   if (document_path != null) {
      document_path_field = XDisplay.getActiveForm().findComponent("DocumentPathField");
      document_path_field.setStringValue(document_path);

      location = XDisplay.getActiveForm().findComponent("Location");
      location.setStringValue(File.getDocumentLocation(document_path));
      location.update();
   }
   selectPressed();
}

/**
 * Overriden in edit_document.jes
 */
function selectPressed() {
   // do nothing
}
