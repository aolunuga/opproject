//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v1.0.6-01/24/2006 06:08 PM(kohsuke)-fcs 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2007.08.02 at 12:39:24 PM EEST 
//


package onepoint.project.configuration.generated.impl;

public class OpLdapScheduleConfigImpl implements onepoint.project.configuration.generated.OpLdapScheduleConfig, com.sun.xml.bind.JAXBObject, onepoint.project.configuration.generated.impl.runtime.UnmarshallableObject, onepoint.project.configuration.generated.impl.runtime.XMLSerializable, onepoint.project.configuration.generated.impl.runtime.ValidatableObject
{

    protected com.sun.xml.bind.util.ListImpl _Minute;
    protected com.sun.xml.bind.util.ListImpl _DayOfWeek;
    protected com.sun.xml.bind.util.ListImpl _Hour;
    protected com.sun.xml.bind.util.ListImpl _DayOfMonth;
    protected com.sun.xml.bind.util.ListImpl _Month;
    public final static java.lang.Class version = (onepoint.project.configuration.generated.impl.JAXBVersion.class);
    private static com.sun.msv.grammar.Grammar schemaFragment;

    private final static java.lang.Class PRIMARY_INTERFACE_CLASS() {
        return (onepoint.project.configuration.generated.OpLdapScheduleConfig.class);
    }

    protected com.sun.xml.bind.util.ListImpl _getMinute() {
        if (_Minute == null) {
            _Minute = new com.sun.xml.bind.util.ListImpl(new java.util.ArrayList());
        }
        return _Minute;
    }

    public java.util.List getMinute() {
        return _getMinute();
    }

    protected com.sun.xml.bind.util.ListImpl _getDayOfWeek() {
        if (_DayOfWeek == null) {
            _DayOfWeek = new com.sun.xml.bind.util.ListImpl(new java.util.ArrayList());
        }
        return _DayOfWeek;
    }

    public java.util.List getDayOfWeek() {
        return _getDayOfWeek();
    }

    protected com.sun.xml.bind.util.ListImpl _getHour() {
        if (_Hour == null) {
            _Hour = new com.sun.xml.bind.util.ListImpl(new java.util.ArrayList());
        }
        return _Hour;
    }

    public java.util.List getHour() {
        return _getHour();
    }

    protected com.sun.xml.bind.util.ListImpl _getDayOfMonth() {
        if (_DayOfMonth == null) {
            _DayOfMonth = new com.sun.xml.bind.util.ListImpl(new java.util.ArrayList());
        }
        return _DayOfMonth;
    }

    public java.util.List getDayOfMonth() {
        return _getDayOfMonth();
    }

    protected com.sun.xml.bind.util.ListImpl _getMonth() {
        if (_Month == null) {
            _Month = new com.sun.xml.bind.util.ListImpl(new java.util.ArrayList());
        }
        return _Month;
    }

    public java.util.List getMonth() {
        return _getMonth();
    }

    public onepoint.project.configuration.generated.impl.runtime.UnmarshallingEventHandler createUnmarshaller(onepoint.project.configuration.generated.impl.runtime.UnmarshallingContext context) {
        return new onepoint.project.configuration.generated.impl.OpLdapScheduleConfigImpl.Unmarshaller(context);
    }

    public void serializeBody(onepoint.project.configuration.generated.impl.runtime.XMLSerializer context)
        throws org.xml.sax.SAXException
    {
        int idx1 = 0;
        final int len1 = ((_Minute == null)? 0 :_Minute.size());
        int idx2 = 0;
        final int len2 = ((_DayOfWeek == null)? 0 :_DayOfWeek.size());
        int idx3 = 0;
        final int len3 = ((_Hour == null)? 0 :_Hour.size());
        int idx4 = 0;
        final int len4 = ((_DayOfMonth == null)? 0 :_DayOfMonth.size());
        int idx5 = 0;
        final int len5 = ((_Month == null)? 0 :_Month.size());
        while (idx1 != len1) {
            context.startElement("", "minute");
            int idx_0 = idx1;
            try {
                idx_0 += 1;
            } catch (java.lang.Exception e) {
                onepoint.project.configuration.generated.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endNamespaceDecls();
            int idx_1 = idx1;
            try {
                idx_1 += 1;
            } catch (java.lang.Exception e) {
                onepoint.project.configuration.generated.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endAttributes();
            try {
                context.text(((java.lang.String) _Minute.get(idx1 ++)), "Minute");
            } catch (java.lang.Exception e) {
                onepoint.project.configuration.generated.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endElement();
        }
        while (idx3 != len3) {
            context.startElement("", "hour");
            int idx_2 = idx3;
            try {
                idx_2 += 1;
            } catch (java.lang.Exception e) {
                onepoint.project.configuration.generated.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endNamespaceDecls();
            int idx_3 = idx3;
            try {
                idx_3 += 1;
            } catch (java.lang.Exception e) {
                onepoint.project.configuration.generated.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endAttributes();
            try {
                context.text(((java.lang.String) _Hour.get(idx3 ++)), "Hour");
            } catch (java.lang.Exception e) {
                onepoint.project.configuration.generated.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endElement();
        }
        while (idx5 != len5) {
            context.startElement("", "month");
            int idx_4 = idx5;
            try {
                idx_4 += 1;
            } catch (java.lang.Exception e) {
                onepoint.project.configuration.generated.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endNamespaceDecls();
            int idx_5 = idx5;
            try {
                idx_5 += 1;
            } catch (java.lang.Exception e) {
                onepoint.project.configuration.generated.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endAttributes();
            try {
                context.text(((java.lang.String) _Month.get(idx5 ++)), "Month");
            } catch (java.lang.Exception e) {
                onepoint.project.configuration.generated.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endElement();
        }
        if ((((_DayOfWeek == null)? 0 :_DayOfWeek.size()) == 0)&&(((_DayOfMonth == null)? 0 :_DayOfMonth.size())>= 1)) {
            while (idx4 != len4) {
                context.startElement("", "day-of-month");
                int idx_6 = idx4;
                try {
                    idx_6 += 1;
                } catch (java.lang.Exception e) {
                    onepoint.project.configuration.generated.impl.runtime.Util.handlePrintConversionException(this, e, context);
                }
                context.endNamespaceDecls();
                int idx_7 = idx4;
                try {
                    idx_7 += 1;
                } catch (java.lang.Exception e) {
                    onepoint.project.configuration.generated.impl.runtime.Util.handlePrintConversionException(this, e, context);
                }
                context.endAttributes();
                try {
                    context.text(((java.lang.String) _DayOfMonth.get(idx4 ++)), "DayOfMonth");
                } catch (java.lang.Exception e) {
                    onepoint.project.configuration.generated.impl.runtime.Util.handlePrintConversionException(this, e, context);
                }
                context.endElement();
            }
        } else {
            if ((((_DayOfWeek == null)? 0 :_DayOfWeek.size())>= 1)&&(((_DayOfMonth == null)? 0 :_DayOfMonth.size()) == 0)) {
                while (idx2 != len2) {
                    context.startElement("", "day-of-week");
                    int idx_8 = idx2;
                    try {
                        idx_8 += 1;
                    } catch (java.lang.Exception e) {
                        onepoint.project.configuration.generated.impl.runtime.Util.handlePrintConversionException(this, e, context);
                    }
                    context.endNamespaceDecls();
                    int idx_9 = idx2;
                    try {
                        idx_9 += 1;
                    } catch (java.lang.Exception e) {
                        onepoint.project.configuration.generated.impl.runtime.Util.handlePrintConversionException(this, e, context);
                    }
                    context.endAttributes();
                    try {
                        context.text(((java.lang.String) _DayOfWeek.get(idx2 ++)), "DayOfWeek");
                    } catch (java.lang.Exception e) {
                        onepoint.project.configuration.generated.impl.runtime.Util.handlePrintConversionException(this, e, context);
                    }
                    context.endElement();
                }
            }
        }
    }

    public void serializeAttributes(onepoint.project.configuration.generated.impl.runtime.XMLSerializer context)
        throws org.xml.sax.SAXException
    {
        int idx1 = 0;
        final int len1 = ((_Minute == null)? 0 :_Minute.size());
        int idx2 = 0;
        final int len2 = ((_DayOfWeek == null)? 0 :_DayOfWeek.size());
        int idx3 = 0;
        final int len3 = ((_Hour == null)? 0 :_Hour.size());
        int idx4 = 0;
        final int len4 = ((_DayOfMonth == null)? 0 :_DayOfMonth.size());
        int idx5 = 0;
        final int len5 = ((_Month == null)? 0 :_Month.size());
        while (idx1 != len1) {
            try {
                idx1 += 1;
            } catch (java.lang.Exception e) {
                onepoint.project.configuration.generated.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
        }
        while (idx3 != len3) {
            try {
                idx3 += 1;
            } catch (java.lang.Exception e) {
                onepoint.project.configuration.generated.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
        }
        while (idx5 != len5) {
            try {
                idx5 += 1;
            } catch (java.lang.Exception e) {
                onepoint.project.configuration.generated.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
        }
        if ((((_DayOfWeek == null)? 0 :_DayOfWeek.size()) == 0)&&(((_DayOfMonth == null)? 0 :_DayOfMonth.size())>= 1)) {
            while (idx4 != len4) {
                try {
                    idx4 += 1;
                } catch (java.lang.Exception e) {
                    onepoint.project.configuration.generated.impl.runtime.Util.handlePrintConversionException(this, e, context);
                }
            }
        } else {
            if ((((_DayOfWeek == null)? 0 :_DayOfWeek.size())>= 1)&&(((_DayOfMonth == null)? 0 :_DayOfMonth.size()) == 0)) {
                while (idx2 != len2) {
                    try {
                        idx2 += 1;
                    } catch (java.lang.Exception e) {
                        onepoint.project.configuration.generated.impl.runtime.Util.handlePrintConversionException(this, e, context);
                    }
                }
            }
        }
    }

    public void serializeURIs(onepoint.project.configuration.generated.impl.runtime.XMLSerializer context)
        throws org.xml.sax.SAXException
    {
        int idx1 = 0;
        final int len1 = ((_Minute == null)? 0 :_Minute.size());
        int idx2 = 0;
        final int len2 = ((_DayOfWeek == null)? 0 :_DayOfWeek.size());
        int idx3 = 0;
        final int len3 = ((_Hour == null)? 0 :_Hour.size());
        int idx4 = 0;
        final int len4 = ((_DayOfMonth == null)? 0 :_DayOfMonth.size());
        int idx5 = 0;
        final int len5 = ((_Month == null)? 0 :_Month.size());
        while (idx1 != len1) {
            try {
                idx1 += 1;
            } catch (java.lang.Exception e) {
                onepoint.project.configuration.generated.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
        }
        while (idx3 != len3) {
            try {
                idx3 += 1;
            } catch (java.lang.Exception e) {
                onepoint.project.configuration.generated.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
        }
        while (idx5 != len5) {
            try {
                idx5 += 1;
            } catch (java.lang.Exception e) {
                onepoint.project.configuration.generated.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
        }
        if ((((_DayOfWeek == null)? 0 :_DayOfWeek.size()) == 0)&&(((_DayOfMonth == null)? 0 :_DayOfMonth.size())>= 1)) {
            while (idx4 != len4) {
                try {
                    idx4 += 1;
                } catch (java.lang.Exception e) {
                    onepoint.project.configuration.generated.impl.runtime.Util.handlePrintConversionException(this, e, context);
                }
            }
        } else {
            if ((((_DayOfWeek == null)? 0 :_DayOfWeek.size())>= 1)&&(((_DayOfMonth == null)? 0 :_DayOfMonth.size()) == 0)) {
                while (idx2 != len2) {
                    try {
                        idx2 += 1;
                    } catch (java.lang.Exception e) {
                        onepoint.project.configuration.generated.impl.runtime.Util.handlePrintConversionException(this, e, context);
                    }
                }
            }
        }
    }

    public java.lang.Class getPrimaryInterface() {
        return (onepoint.project.configuration.generated.OpLdapScheduleConfig.class);
    }

    public com.sun.msv.verifier.DocumentDeclaration createRawValidator() {
        if (schemaFragment == null) {
            schemaFragment = com.sun.xml.bind.validator.SchemaDeserializer.deserialize((
 "\u00ac\u00ed\u0000\u0005sr\u0000\u001fcom.sun.msv.grammar.SequenceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001dcom.su"
+"n.msv.grammar.BinaryExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0004exp1t\u0000 Lcom/sun/msv/gra"
+"mmar/Expression;L\u0000\u0004exp2q\u0000~\u0000\u0002xr\u0000\u001ecom.sun.msv.grammar.Expressi"
+"on\u00f8\u0018\u0082\u00e8N5~O\u0002\u0000\u0002L\u0000\u0013epsilonReducibilityt\u0000\u0013Ljava/lang/Boolean;L\u0000\u000b"
+"expandedExpq\u0000~\u0000\u0002xpppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsr\u0000 com.sun.msv.grammar."
+"OneOrMoreExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001ccom.sun.msv.grammar.UnaryExp\u0000\u0000\u0000\u0000\u0000"
+"\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\u0003expq\u0000~\u0000\u0002xq\u0000~\u0000\u0003ppsr\u0000\'com.sun.msv.grammar.trex.Elemen"
+"tPattern\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\tnameClasst\u0000\u001fLcom/sun/msv/grammar/NameC"
+"lass;xr\u0000\u001ecom.sun.msv.grammar.ElementExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002Z\u0000\u001aignoreU"
+"ndeclaredAttributesL\u0000\fcontentModelq\u0000~\u0000\u0002xq\u0000~\u0000\u0003pp\u0000sq\u0000~\u0000\u0000ppsr\u0000\u001b"
+"com.sun.msv.grammar.DataExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\u0002dtt\u0000\u001fLorg/relaxng/d"
+"atatype/Datatype;L\u0000\u0006exceptq\u0000~\u0000\u0002L\u0000\u0004namet\u0000\u001dLcom/sun/msv/util/S"
+"tringPair;xq\u0000~\u0000\u0003ppsr\u0000#com.sun.msv.datatype.xsd.StringType\u0000\u0000\u0000"
+"\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001Z\u0000\risAlwaysValidxr\u0000*com.sun.msv.datatype.xsd.Builtin"
+"AtomicType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000%com.sun.msv.datatype.xsd.ConcreteTy"
+"pe\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\'com.sun.msv.datatype.xsd.XSDatatypeImpl\u0000\u0000\u0000\u0000"
+"\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\fnamespaceUrit\u0000\u0012Ljava/lang/String;L\u0000\btypeNameq\u0000~\u0000\u0018L"
+"\u0000\nwhiteSpacet\u0000.Lcom/sun/msv/datatype/xsd/WhiteSpaceProcessor"
+";xpt\u0000 http://www.w3.org/2001/XMLSchemat\u0000\u0006stringsr\u00005com.sun.m"
+"sv.datatype.xsd.WhiteSpaceProcessor$Preserve\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000,c"
+"om.sun.msv.datatype.xsd.WhiteSpaceProcessor\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xp\u0001sr\u0000"
+"0com.sun.msv.grammar.Expression$NullSetExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000"
+"xq\u0000~\u0000\u0003ppsr\u0000\u001bcom.sun.msv.util.StringPair\u00d0t\u001ejB\u008f\u008d\u00a0\u0002\u0000\u0002L\u0000\tlocalNa"
+"meq\u0000~\u0000\u0018L\u0000\fnamespaceURIq\u0000~\u0000\u0018xpq\u0000~\u0000\u001cq\u0000~\u0000\u001bsr\u0000\u001dcom.sun.msv.gramm"
+"ar.ChoiceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0001ppsr\u0000 com.sun.msv.grammar.Attri"
+"buteExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0003expq\u0000~\u0000\u0002L\u0000\tnameClassq\u0000~\u0000\fxq\u0000~\u0000\u0003sr\u0000\u0011java"
+".lang.Boolean\u00cd r\u0080\u00d5\u009c\u00fa\u00ee\u0002\u0000\u0001Z\u0000\u0005valuexp\u0000psq\u0000~\u0000\u0010ppsr\u0000\"com.sun.msv."
+"datatype.xsd.QnameType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0015q\u0000~\u0000\u001bt\u0000\u0005QNamesr\u00005com."
+"sun.msv.datatype.xsd.WhiteSpaceProcessor$Collapse\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000"
+"xq\u0000~\u0000\u001eq\u0000~\u0000!sq\u0000~\u0000\"q\u0000~\u0000-q\u0000~\u0000\u001bsr\u0000#com.sun.msv.grammar.SimpleNam"
+"eClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\tlocalNameq\u0000~\u0000\u0018L\u0000\fnamespaceURIq\u0000~\u0000\u0018xr\u0000\u001dco"
+"m.sun.msv.grammar.NameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xpt\u0000\u0004typet\u0000)http://www"
+".w3.org/2001/XMLSchema-instancesr\u00000com.sun.msv.grammar.Expre"
+"ssion$EpsilonExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003sq\u0000~\u0000(\u0001q\u0000~\u00007sq\u0000~\u00001t\u0000"
+"\u0006minutet\u0000\u0000sq\u0000~\u0000\bppsq\u0000~\u0000\u000bpp\u0000sq\u0000~\u0000\u0000ppq\u0000~\u0000\u0013sq\u0000~\u0000$ppsq\u0000~\u0000&q\u0000~\u0000)p"
+"q\u0000~\u0000*q\u0000~\u00003q\u0000~\u00007sq\u0000~\u00001t\u0000\u0004hourq\u0000~\u0000;sq\u0000~\u0000\bppsq\u0000~\u0000\u000bpp\u0000sq\u0000~\u0000\u0000ppq\u0000"
+"~\u0000\u0013sq\u0000~\u0000$ppsq\u0000~\u0000&q\u0000~\u0000)pq\u0000~\u0000*q\u0000~\u00003q\u0000~\u00007sq\u0000~\u00001t\u0000\u0005monthq\u0000~\u0000;sq\u0000"
+"~\u0000$ppsq\u0000~\u0000\bppsq\u0000~\u0000\u000bpp\u0000sq\u0000~\u0000\u0000ppq\u0000~\u0000\u0013sq\u0000~\u0000$ppsq\u0000~\u0000&q\u0000~\u0000)pq\u0000~\u0000*"
+"q\u0000~\u00003q\u0000~\u00007sq\u0000~\u00001t\u0000\fday-of-monthq\u0000~\u0000;sq\u0000~\u0000\bppsq\u0000~\u0000\u000bpp\u0000sq\u0000~\u0000\u0000p"
+"pq\u0000~\u0000\u0013sq\u0000~\u0000$ppsq\u0000~\u0000&q\u0000~\u0000)pq\u0000~\u0000*q\u0000~\u00003q\u0000~\u00007sq\u0000~\u00001t\u0000\u000bday-of-wee"
+"kq\u0000~\u0000;sr\u0000\"com.sun.msv.grammar.ExpressionPool\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\bex"
+"pTablet\u0000/Lcom/sun/msv/grammar/ExpressionPool$ClosedHash;xpsr"
+"\u0000-com.sun.msv.grammar.ExpressionPool$ClosedHash\u00d7j\u00d0N\u00ef\u00e8\u00ed\u001c\u0003\u0000\u0003I\u0000"
+"\u0005countB\u0000\rstreamVersionL\u0000\u0006parentt\u0000$Lcom/sun/msv/grammar/Expre"
+"ssionPool;xp\u0000\u0000\u0000\u0013\u0001pq\u0000~\u0000\u0005q\u0000~\u0000\nq\u0000~\u0000<q\u0000~\u0000Cq\u0000~\u0000Kq\u0000~\u0000Rq\u0000~\u0000\u0006q\u0000~\u0000\u0007q\u0000"
+"~\u0000Jq\u0000~\u0000\u000fq\u0000~\u0000>q\u0000~\u0000Eq\u0000~\u0000Mq\u0000~\u0000Tq\u0000~\u0000%q\u0000~\u0000?q\u0000~\u0000Fq\u0000~\u0000Nq\u0000~\u0000Ux"));
        }
        return new com.sun.msv.verifier.regexp.REDocumentDeclaration(schemaFragment);
    }

    public class Unmarshaller
        extends onepoint.project.configuration.generated.impl.runtime.AbstractUnmarshallingEventHandlerImpl
    {


        public Unmarshaller(onepoint.project.configuration.generated.impl.runtime.UnmarshallingContext context) {
            super(context, "---------------");
        }

        protected Unmarshaller(onepoint.project.configuration.generated.impl.runtime.UnmarshallingContext context, int startState) {
            this(context);
            state = startState;
        }

        public java.lang.Object owner() {
            return onepoint.project.configuration.generated.impl.OpLdapScheduleConfigImpl.this;
        }

        public void enterElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname, org.xml.sax.Attributes __atts)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  3 :
                        if (("minute" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 1;
                            return ;
                        }
                        if (("hour" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 4;
                            return ;
                        }
                        break;
                    case  0 :
                        if (("minute" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 1;
                            return ;
                        }
                        break;
                    case  12 :
                        if (("day-of-month" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 13;
                            return ;
                        }
                        if (("day-of-week" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 10;
                            return ;
                        }
                        revertToParentFromEnterElement(___uri, ___local, ___qname, __atts);
                        return ;
                    case  6 :
                        if (("hour" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 4;
                            return ;
                        }
                        if (("month" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 7;
                            return ;
                        }
                        break;
                    case  9 :
                        if (("month" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 7;
                            return ;
                        }
                        if (("day-of-month" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 13;
                            return ;
                        }
                        if (("day-of-week" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 10;
                            return ;
                        }
                        break;
                }
                super.enterElement(___uri, ___local, ___qname, __atts);
                break;
            }
        }

        public void leaveElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  5 :
                        if (("hour" == ___local)&&("" == ___uri)) {
                            context.popAttributes();
                            state = 6;
                            return ;
                        }
                        break;
                    case  2 :
                        if (("minute" == ___local)&&("" == ___uri)) {
                            context.popAttributes();
                            state = 3;
                            return ;
                        }
                        break;
                    case  8 :
                        if (("month" == ___local)&&("" == ___uri)) {
                            context.popAttributes();
                            state = 9;
                            return ;
                        }
                        break;
                    case  12 :
                        revertToParentFromLeaveElement(___uri, ___local, ___qname);
                        return ;
                    case  14 :
                        if (("day-of-month" == ___local)&&("" == ___uri)) {
                            context.popAttributes();
                            state = 12;
                            return ;
                        }
                        break;
                    case  11 :
                        if (("day-of-week" == ___local)&&("" == ___uri)) {
                            context.popAttributes();
                            state = 12;
                            return ;
                        }
                        break;
                }
                super.leaveElement(___uri, ___local, ___qname);
                break;
            }
        }

        public void enterAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  12 :
                        revertToParentFromEnterAttribute(___uri, ___local, ___qname);
                        return ;
                }
                super.enterAttribute(___uri, ___local, ___qname);
                break;
            }
        }

        public void leaveAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  12 :
                        revertToParentFromLeaveAttribute(___uri, ___local, ___qname);
                        return ;
                }
                super.leaveAttribute(___uri, ___local, ___qname);
                break;
            }
        }

        public void handleText(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                try {
                    switch (state) {
                        case  1 :
                            state = 2;
                            eatText1(value);
                            return ;
                        case  10 :
                            state = 11;
                            eatText2(value);
                            return ;
                        case  13 :
                            state = 14;
                            eatText3(value);
                            return ;
                        case  7 :
                            state = 8;
                            eatText4(value);
                            return ;
                        case  12 :
                            revertToParentFromText(value);
                            return ;
                        case  4 :
                            state = 5;
                            eatText5(value);
                            return ;
                    }
                } catch (java.lang.RuntimeException e) {
                    handleUnexpectedTextException(value, e);
                }
                break;
            }
        }

        private void eatText1(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _getMinute().add(value);
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText2(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _getDayOfWeek().add(value);
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText3(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _getDayOfMonth().add(value);
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText4(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _getMonth().add(value);
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText5(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _getHour().add(value);
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

    }

}
