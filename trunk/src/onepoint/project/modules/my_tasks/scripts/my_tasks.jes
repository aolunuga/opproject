/*
 * Copyright(c) OnePoint Software GmbH 2007. All Rights Reserved.
 */

// Controller script for my_tasks.oxf

require "onepoint/project/scripts/error.jes";
require "onepoint/project/modules/project_planning/scripts/open_activity_details.jes" as openDetails;
require "onepoint/project/modules/project_planning/scripts/comments.jes";

import onepoint.service.XMessage;
import onepoint.express.XDisplay;
import onepoint.express.XComponent;
import onepoint.express.XValidator;

function timeUnitChanged(event) {
   // *** Get current choice from choice-field
   choice_field = XDisplay.getActiveForm().findComponent("TimeUnitChooser");
   choice_id = XValidator.choiceID(choice_field.getStringValue());
   // *** Find component gantt-box via ID
   gantt_box = XDisplay.getActiveForm().findComponent("ActivityGanttChart");
   // *** Invoke setTimeUnit(time_unit) on gantt-box
   if (choice_id.equals("d")) {
      gantt_box.setTimeUnit(2);
      // XCalendar.DAYS;
   }
   if (choice_id.equals("w")) {
      gantt_box.setTimeUnit(3);
      // XCalendar.WEEKS;
   }
   if (choice_id.equals("m")) {
      gantt_box.setTimeUnit(4);
      // XCalendar.MONTHS;
   }

   gantt_box.resetCalendar();
   gantt_box.doLayout();
   gantt_box.repaint();
}

function addComment(event) {
   // Open add-comment dialog w/activity-locator as parameter
   activitySet = XDisplay.getActiveForm().findComponent("ActivitySet");
   selectedRows = activitySet.selectedRows();
   if (selectedRows.size() > 0) {
      activityLocator = selectedRows[0].getStringValue();
      addActivityComment(activityLocator);
   }
}

function print(event) {
   tabBox = XDisplay.getActiveForm().findComponent("MyTabBox");
   cur_tab = tabBox.getIntValue();
   tabName = tabBox.getChild(cur_tab + 1).getText();
   printTitle = XDisplay.getActiveForm().findComponent("PrintTitle").getStringValue();
   title = printTitle + " - ";
   title = title + tabName;

   if (cur_tab == 0) {
      activity_table = XDisplay.getActiveForm().findComponent("ActivityTable");
      activity_table.print(title);
   }
   else {
      if (cur_tab == 1) {
         gantt_chart = XDisplay.getActiveForm().findComponent("ActivityGanttChart");
         gantt_chart.print(title);
      }
   }
}


function saveActivityTableCSV(event) {
   XDisplay.getActiveForm().findComponent("ActivityTable").saveAsCSV("Save My Tasks");
}

function saveActivityTableImage(event) {
   XDisplay.getActiveForm().findComponent("ActivityTable").saveAsImage("Save My Tasks");
}

function saveActivityChartImage(event) {
   XDisplay.getActiveForm().findComponent("ActivityGanttChart").saveAsImage("Save My Tasks");
}

function filterChanged(event) {
   form = XDisplay.getActiveForm();

   start_choice_field = form.findComponent("StartTimeChooser");
   start_choice_id = XValidator.choiceID(start_choice_field.getStringValue());

   project_choice_field = form.findComponent("ProjectChooser");
   project_choice_id = XValidator.choiceID(project_choice_field.getStringValue());

   resources_choice_field = form.findComponent("ResourcesChooser");
   resources_choice_id = XValidator.choiceID(resources_choice_field.getStringValue());

   parameters.project_choice_id = project_choice_id;
   parameters.start_before_id = start_choice_id;
   parameters.resources_choice_id = resources_choice_id;
   XDisplay.findFrame("MainFrame").refreshForm(parameters);
}

function addAdhoc(event) {
   dialog = XComponent.newDialog();
   dialog.open("/modules/my_tasks/forms/add_adhoc_task.oxf.xml", parameters);
}

function editAdhoc(event) {
   form = XDisplay.getActiveForm();
   dataSet = form.findComponent("ActivitySet");
   selected_rows = dataSet.selectedRows();
   if (selected_rows.size() > 0) {
      parameters.selectedRow = selected_rows[0];
      parameters.EditMode = event.editMode;
      dialog = XComponent.newDialog();
      dialog.open("/modules/my_tasks/forms/edit_adhoc_task.oxf.xml", parameters);
   }
}

function editActivity(event) {
   form = XDisplay.getActiveForm();
   dataSet = form.findComponent("ActivitySet");
   selected_rows = dataSet.selectedRows();
   if (selected_rows.size() > 0) {
      row = selected_rows[0];
      type = row.getChild(1).getValue();
      if (type == 6) {
         event.editMode = true;
         editAdhoc(event);
      }
      else {
         openDetails.editActivity(event);
      }
   }
}

function deleteAdhoc(event) {
   form = XDisplay.getActiveForm();
   dataSet = form.findComponent("ActivitySet");
   selected_rows = dataSet.selectedRows();
   if (selected_rows.size() > 0) {
      parameters.rows = selected_rows;
      dialog = XComponent.newDialog();
      dialog.open("/modules/my_tasks/forms/confirm_adhoc_delete.oxf.xml", parameters);
   }
}

function refreshForm() {
   XDisplay.findFrame("MainFrame").refreshForm();
}

function selectionChanged(event) {
   form = XDisplay.getActiveForm();
   toolBar = form.findComponent("myTasksToolBar");
   deleteButton = form.findComponent("DeleteAdhocButton");

   // get delete permission for selected row
   dataSet = form.findComponent("ActivitySet");
   selected_rows = dataSet.selectedRows();
   if (selected_rows.size() > 0) {
      row = selected_rows[0];
      deletePermissionSet = form.findComponent("DeletePermissionSet");
      permRow = deletePermissionSet.getChild(row.getIndex());
   }

   tableRow = event.event_source;
   dataRow = tableRow.getDataComponent();
   typeCell = dataRow.getChild(1);
   if (typeCell.getValue() == 6 && (permRow.getBooleanValue() == true)) {
      deleteButton.setEnabled(true);
   }
   else {
      deleteButton.setEnabled(false);
   }

   toolBar.doLayout();
   toolBar.repaint();
}